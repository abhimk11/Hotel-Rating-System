server:
    port: 8090

spring:
    application:
      name: USER-SERVICE
    datasource:
        url: jdbc:postgresql://localhost:5432/microservices
        username: postgres
        password: password
        driver-class-name : org.postgresql.Driver

    jpa:
      hibernate:
        ddl-auto: update
      show-sql: true

    config:
      import: configserver:http://localhost:8094

    kafka:
      bootstrap-servers: localhost:9092
      template:
        default-topic: notificationTopic
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        properties:
          spring:
            json:
              type:
                mapping: event:com.abhi.user.service.event.UserPlacedEvent

#    zipkin:
#      base-url: http://127.0.0.1:9411/

management:
  health:
    circuitbreakers:
      enable: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s


#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka
